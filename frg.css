To adapt this Highcharts pie chart configuration for use with Chart.js in your React application, you'll need to make some adjustments. Here's how you can modify your Chart.js component to incorporate similar settings:

1. First, update your PieChart.js component:

javascript
import React from 'react';
import { Pie } from 'react-chartjs-2';
import { Chart as ChartJS, ArcElement, Tooltip, Legend, Title } from 'chart.js';

ChartJS.register(ArcElement, Tooltip, Legend, Title);

const PieChart = () => {
  const data = {
    labels: ['Firefox', 'IE/11', 'Edge', 'Chrome', 'Safari', 'Other'],
    datasets: [
      {
        data: [20, 5, 10, 40, 24, 1],
        backgroundColor: [
          '#FF6384',
          '#36A2EB',
          '#FFCE56',
          '#4BC0C0',
          '#9966FF',
          '#C9CBCF'
        ],
      },
    ],
  };

  const options = {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        position: 'right',
      },
      title: {
        display: true,
        text: 'Browser Usage',
        align: 'start',
        padding: {
          top: 10,
          bottom: 30
        },
      },
      tooltip: {
        callbacks: {
          label: (context) => {
            const label = context.label || '';
            const value = context.parsed || 0;
            return `${label}: ${value}%`;
          },
        },
      },
    },
  };

  return (
    <div style={{ width: '100%', height: '400px' }}>
      <Pie data={data} options={options} />
    </div>
  );
};

export default PieChart;


2. In your App.js or wherever you want to use this chart:

javascript
import PieChart from './components/PieChart';

function App() {
  return (
    <div className="App">
      {/* Your other components */}
      <div id="pie" className="dls-data-visualization hc-pie">
        <PieChart />
      </div>
    </div>
  );
}

export default App;


This Chart.js version mimics the Highcharts configuration from your image:

- It sets up a similar data structure with browser usage percentages.
- The chart title is set to "Browser Usage" and aligned to the left.
- The legend is positioned on the right side of the chart.
- The tooltip shows the percentage for each slice.
- The chart is responsive and takes up 100% width and 400px height of its container.

Note that Chart.js doesn't have an exact equivalent for some Highcharts features like styledMode or the specific hover effects shown in your Highcharts configuration. However, this setup provides a close approximation of the visual style and functionality.

Remember to adjust the colors, data, and any other specifics to match your exact requirements. You may also need to style the container div (dls-data-visualization hc-pie) to match your design system's requirements.
