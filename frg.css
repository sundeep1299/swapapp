import requests
import json
import openpyxl
from datetime import datetime
import os
import warnings
from requests.packages.urllib3.exceptions import InsecureRequestWarning

warnings.simplefilter('ignore', InsecureRequestWarning)

def get_auth_token():
    url = "https://aexp.oktapreview.com/oauth2/aus1kh0oh8jY8jwqJ0h8/v1/token"
    payload = 'username=svc.aj.aida-lumi-api&password=A!daLum1&scope=openid&grant_type=password'
    headers = {
        'Authorization': 'Basic MG9hMWtoMGw2eHdBWHQ2cWswaDg=',
        'Content-Type': 'application/x-www-form-urlencoded',
        'Cookie': 'JSESSIONID=629322A413F1640648ECAE4A6990A0EB; JSESSIONID=6D6EDD58E277FC49B9E8F56990EF858D'
    }
    response = requests.request("POST", url, headers=headers, data=payload, verify=False)
    return json.loads(response.text)['access_token']

def check_instance_status(auth_token, resource_name):
    url = f"https://lumigcpauto-qa.aexp.com/un/gcp/status/{resource_name}"
    headers = {
        'Authorization': f'Bearer {auth_token}',
        'Content-Type': 'application/json'
    }
    response = requests.request("GET", url, headers=headers, verify=False)
    return json.loads(response.text)

def read_log_excel(filename="workbench_instances_log.xlsx"):
    wb = openpyxl.load_workbook(filename)
    sheet = wb.active
    data = []
    headers = [cell.value for cell in sheet[1]]
    for row in sheet.iter_rows(min_row=2, values_only=True):
        row_data = dict(zip(headers, row))
        if row_data['Resource Name'] != 'N/A':  # Skip rows where resource creation failed
            data.append(row_data)
    return data, wb, sheet

def update_log_excel(wb, sheet, row_index, proxy_uri, status):
    if 'Proxy URI' not in [cell.value for cell in sheet[1]]:
        sheet.cell(row=1, column=sheet.max_column + 1, value='Proxy URI')
    if 'Updated Status' not in [cell.value for cell in sheet[1]]:
        sheet.cell(row=1, column=sheet.max_column + 1, value='Updated Status')
    
    proxy_uri_col = [cell.value for cell in sheet[1]].index('Proxy URI') + 1
    status_col = [cell.value for cell in sheet[1]].index('Updated Status') + 1
    
    sheet.cell(row=row_index, column=proxy_uri_col, value=proxy_uri)
    sheet.cell(row=row_index, column=status_col, value=status)
    
    wb.save("workbench_instances_log.xlsx")

def main():
    auth_token = get_auth_token()
    print("Auth Token obtained successfully.")
    
    log_data, wb, sheet = read_log_excel()
    
    for index, row in enumerate(log_data, start=2):  # start=2 because Excel rows are 1-indexed and we have a header
        resource_name = row['Resource Name']
        print(f"Checking status for resource: {resource_name}")
        
        status_response = check_instance_status(auth_token, resource_name)
        current_status = status_response.get('status', 'UNKNOWN')
        proxy_uri = status_response.get('gcp', {}).get('proxyUri', 'N/A')
        
        print(f"Current status: {current_status}")
        print(f"Proxy URI: {proxy_uri}")
        
        update_log_excel(wb, sheet, index, proxy_uri, current_status)
        
        print(f"Updated log for resource: {resource_name}\n")

if __name__ == "__main__":
    main()