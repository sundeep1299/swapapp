import React, { useState } from 'react';
import { DatePicker, ButtonPrimary, Input, Select, SelectOption, Label } from '@americanexpress/dls-react';

const StatusForm = () => {
  const [formData, setFormData] = useState({
    projectName: '',
    priority: '',
    jiraLink: '',
    arbApprovalDate: '',
    projectBuildStartDate: '',
    projectBuildStartStep1: '',
    aclRaisedDate: '',
    firewallReqCompleteDate: '',
    projectBuildDate: '',
    projectValidationDate: '',
    projectHandoverDate: '',
    issues: '',
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prevState => ({ ...prevState, [name]: value }));
  };

  const handleDateChange = (name) => (date) => {
    setFormData(prevState => ({ ...prevState, [name]: date }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('Form submitted:', formData);
    alert('Form submitted successfully!');
  };

  const renderDatePicker = (label, name) => (
    <div style={styles.fieldContainer}>
      <Label htmlFor={name} style={styles.label}>{label}</Label>
      <DatePicker
        date={formData[name]}
        onDateChange={handleDateChange(name)}
        placeholder="MM/DD/YYYY"
      />
    </div>
  );

  const renderField = (label, name, type = "text") => {
    if (type === "date") {
      return renderDatePicker(label, name);
    }
    return (
      <div style={styles.fieldContainer}>
        <Label htmlFor={name} style={styles.label}>{label}</Label>
        {type === "select" ? (
          <Select name={name} value={formData[name]} onChange={handleChange} required style={styles.input}>
            <SelectOption value="">Select Priority</SelectOption>
            <SelectOption value="p0">P0</SelectOption>
            <SelectOption value="p1">P1</SelectOption>
            <SelectOption value="p2">P2</SelectOption>
            <SelectOption value="p3">P3</SelectOption>
          </Select>
        ) : type === "textarea" ? (
          <textarea
            id={name}
            name={name}
            value={formData[name]}
            onChange={handleChange}
            required
            style={styles.input}
          />
        ) : (
          <Input
            type={type}
            id={name}
            name={name}
            value={formData[name]}
            onChange={handleChange}
            required
            style={styles.input}
          />
        )}
      </div>
    );
  };

  return (
    <form onSubmit={handleSubmit} style={styles.form}>
      <div style={styles.formContainer}>
        <div style={styles.teamColumn}>
          <div style={{...styles.teamName, backgroundColor: '#e6f2ff'}}>UCE</div>
          <div style={styles.teamFields}>
            {renderField("Project Name", "projectName")}
            {renderField("Priority", "priority", "select")}
            {renderField("Jira Link", "jiraLink")}
            {renderField("ARB Approval Date", "arbApprovalDate", "date")}
          </div>
        </div>
        <div style={styles.teamColumn}>
          <div style={{...styles.teamName, backgroundColor: '#e6ffe6'}}>Platform Engineering</div>
          <div style={styles.teamFields}>
            {renderField("Project Build Start Date", "projectBuildStartDate", "date")}
            {renderField("Project Build Start Step 1", "projectBuildStartStep1", "date")}
          </div>
        </div>
        <div style={styles.teamColumn}>
          <div style={{...styles.teamName, backgroundColor: '#e6f2ff'}}>UCE</div>
          <div style={styles.teamFields}>
            {renderField("ACL Raised Date", "aclRaisedDate", "date")}
            {renderField("Firewall Request Complete Date", "firewallReqCompleteDate", "date")}
          </div>
        </div>
        <div style={styles.teamColumn}>
          <div style={{...styles.teamName, backgroundColor: '#e6ffe6'}}>Platform Engineering</div>
          <div style={styles.teamFields}>
            {renderField("Project Build Date", "projectBuildDate", "date")}
            {renderField("Project Validation Date", "projectValidationDate", "date")}
            {renderField("Project Handover Date", "projectHandoverDate", "date")}
            {renderField("Issues / Remarks", "issues", "textarea")}
          </div>
        </div>
      </div>
      <div style={styles.submitContainer}>
        <ButtonPrimary type="submit" style={styles.submitButton}>Submit Form</ButtonPrimary>
      </div>
    </form>
  );
};

const styles = {
  form: {
    width: '100%',
  },
  formContainer: {
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'space-between',
    width: '100%',
    marginBottom: '20px',
  },
  teamColumn: {
    width: '24%',
    marginRight: '1%',
    display: 'flex',
    flexDirection: 'column',
  },
  teamName: {
    padding: '8px',
    fontWeight: 'bold',
    textAlign: 'center',
    borderRadius: '5px 5px 0 0',
    fontSize: '14px',
  },
  teamFields: {
    padding: '8px',
    backgroundColor: '#ffffff',
    borderRadius: '0 0 5px 5px',
    flexGrow: 1,
  },
  fieldContainer: {
    marginBottom: '10px',
  },
  label: {
    display: 'block',
    marginBottom: '3px',
    fontWeight: 'bold',
    fontSize: '12px',
  },
  input: {
    width: '100%',
    padding: '4px',
    fontSize: '12px',
  },
  submitContainer: {
    display: 'flex',
    justifyContent: 'center',
  },
  submitButton: {
    padding: '8px 16px',
    fontSize: '14px',
    width: '200px',
  },
};

export default StatusForm;
