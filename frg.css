import React, { useState } from 'react';
import { DatePicker, ButtonPrimary, Input, Select, SelectOption, Label } from '@americanexpress/dls-react';

const StatusForm = () => {
  const [formData, setFormData] = useState({
    projectName: '',
    priority: '',
    jiraLink: '',
    arbApprovalDate: null,
    projectBuildStartDate: null,
    projectBuildStartStep1: null,
    aclRaisedDate: null,
    firewallReqCompleteDate: null,
    projectBuildDate: null,
    projectValidationDate: null,
    projectHandoverDate: null,
    issues: '',
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prevState => ({ ...prevState, [name]: value }));
  };

  const handleDateChange = (name) => (date) => {
    setFormData(prevState => ({ ...prevState, [name]: date }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('Form submitted:', formData);
    alert('Form submitted successfully!');
  };

  const formatDate = (date) => {
    if (!date) return '';
    if (typeof date === 'string') return date;
    if (date instanceof Date) {
      return date.toLocaleDateString('en-US', {
        year: 'numeric',
        month: '2-digit',
        day: '2-digit'
      });
    }
    return '';
  };

  const renderDatePicker = (label, name) => (
    <div style={styles.fieldContainer}>
      <Label htmlFor={name} style={styles.label}>{label}</Label>
      <DatePicker
        id={`${name}-default`}
        name={name}
        date={formData[name]}
        onDateChange={handleDateChange(name)}
        placeholder="MM/DD/YYYY"
      />
      <div style={styles.selectedDate}>
        Selected: {formatDate(formData[name])}
      </div>
    </div>
  );

  const renderField = (label, name, type = "text") => {
    if (type === "date") {
      return renderDatePicker(label, name);
    }
    return (
      <div style={styles.fieldContainer}>
        <Label htmlFor={name} style={styles.label}>{label}</Label>
        {type === "select" ? (
          <Select name={name} value={formData[name]} onChange={handleChange} required style={styles.input}>
            <SelectOption value="">Select Priority</SelectOption>
            <SelectOption value="p0">P0</SelectOption>
            <SelectOption value="p1">P1</SelectOption>
            <SelectOption value="p2">P2</SelectOption>
            <SelectOption value="p3">P3</SelectOption>
          </Select>
        ) : (
          <Input
            type={type}
            id={name}
            name={name}
            value={formData[name]}
            onChange={handleChange}
            required
            style={styles.input}
          />
        )}
      </div>
    );
  };

  return (
    <form onSubmit={handleSubmit} style={styles.form}>
      <div style={styles.formContainer}>
        <div style={styles.teamColumn}>
          <div style={{...styles.teamName, backgroundColor: '#e6f2ff'}}>UCE</div>
          <div style={styles.teamFields}>
            {renderField("Project Name", "projectName")}
            {renderField("Priority", "priority", "select")}
            {renderField("Jira Link", "jiraLink")}
            {renderField("ARB Approval Date", "arbApprovalDate", "date")}
          </div>
        </div>
        <div style={styles.teamColumn}>
          <div style={{...styles.teamName, backgroundColor: '#e6ffe6'}}>Platform Engineering</div>
          <div style={styles.teamFields}>
            {renderField("Project Build Start Date", "projectBuildStartDate", "date")}
            {renderField("Project Build Start Step 1", "projectBuildStartStep1", "date")}
          </div>
        </div>
        <div style={styles.teamColumn}>
          <div style={{...styles.teamName, backgroundColor: '#e6f2ff'}}>UCE</div>
          <div style={styles.teamFields}>
            {renderField("ACL Raised Date", "aclRaisedDate", "date")}
            {renderField("Firewall Request Complete Date", "firewallReqCompleteDate", "date")}
          </div>
        </div>
        <div style={styles.teamColumn}>
          <div style={{...styles.teamName, backgroundColor: '#e6ffe6'}}>Platform Engineering</div>
          <div style={styles.teamFields}>
            {renderField("Project Build Date", "projectBuildDate", "date")}
            {renderField("Project Validation Date", "projectValidationDate", "date")}
            {renderField("Project Handover Date", "projectHandoverDate", "date")}
            {renderField("Issues / Remarks", "issues", "textarea")}
          </div>
        </div>
      </div>
      <div style={styles.submitContainer}>
        <ButtonPrimary type="submit" style={styles.submitButton}>Submit Form</ButtonPrimary>
      </div>
    </form>
  );
};

const styles = {
  // ... (previous styles remain the same)
  selectedDate: {
    fontSize: '12px',
    marginTop: '4px',
    color: '#666',
  },
};

export default StatusForm;
