 Here's how you can create a table and insert some data using JDBC:

```python
def get_jdbc_connection(password):
    print("Start: Getting JDBC connection")
    try:
        spark = SparkSession.builder \
            .appName("CloudSQL JDBC Connection") \
            .config("spark.jars.packages", 
                "org.postgresql:postgresql:42.2.23,com.google.cloud.sql:postgres-socket-factory:1.11.0") \
            .getOrCreate()

        # Create sample data
        data = [
            (1, "John Doe", "Engineering"),
            (2, "Jane Smith", "Finance"),
            (3, "Bob Wilson", "Marketing")
        ]
        
        columns = ["id", "name", "department"]
        
        # Create DataFrame
        df = spark.createDataFrame(data, columns)

        # JDBC connection properties
        jdbc_url = "jdbc:postgresql://192.168.19.3:5432/psc_test"
        
        # Write data to PostgreSQL
        df.write \
            .format("jdbc") \
            .option("url", jdbc_url) \
            .option("driver", "org.postgresql.Driver") \
            .option("dbtable", "employees") \  # Table name
            .option("user", "svc-p-lumi-pscpoc-sa@prj-p-lumi-pscpoc.iam") \
            .option("password", password) \
            .option("socketFactory", "com.google.cloud.sql.postgres.SocketFactory") \
            .option("cloudSqlInstance", "prj-d-netsec:us-central1:cloudsql-with-psc") \
            .option("ipTypes", "PSC") \
            .mode("overwrite") \  # This will create new table or overwrite if exists
            .save()

        # Verify by reading back the data
        read_df = spark.read \
            .format("jdbc") \
            .option("url", jdbc_url) \
            .option("driver", "org.postgresql.Driver") \
            .option("dbtable", "employees") \
            .option("user", "svc-p-lumi-pscpoc-sa@prj-p-lumi-pscpoc.iam") \
            .option("password", password) \
            .option("socketFactory", "com.google.cloud.sql.postgres.SocketFactory") \
            .option("cloudSqlInstance", "prj-d-netsec:us-central1:cloudsql-with-psc") \
            .option("ipTypes", "PSC") \
            .load()

        print("\nVerifying written data:")
        read_df.show()
        
        return True

    except Exception as e:
        print(f"Error: {str(e)}")
        return False

def main():
    # Get access token
    password = get_cf_default_access_token()
    if not password:
        print("Failed to get access token")
        return

    # Create table and insert data
    success = get_jdbc_connection(password)
    if success:
        print("Successfully created table and inserted data")
    else:
        print("Failed to create table and insert data")

if __name__ == "__main__":
    main()
```

This code:
1. Creates a sample DataFrame with employee data
2. Writes it to a new table called "employees" in your PostgreSQL database
3. Reads back the data to verify it was written correctly
4. Uses "overwrite" mode which will create the table if it doesn't exist or overwrite if it does

You can modify the data structure by changing:
1. The `data` list to include your desired records
2. The `columns` list to match your desired column names
3. The `dbtable` option to use your preferred table name

Would you like me to modify the data structure or add more functionality?