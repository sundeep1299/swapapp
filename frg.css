 I see. Looking at the images, we need to modify the `read_log_excel` function to check for the status before including the row in processing, and then update both URL and status accordingly. Here's the corrected version:

```python
def read_log_excel(filename="workbench_instances_log.xlsx"):
    """Read workbench data from Excel, skipping failed creations"""
    wb = openpyxl.load_workbook(filename)
    sheet = wb.active
    
    data = []
    headers = [cell.value for cell in sheet[1]]
    
    # Find the Status column
    for row in sheet.iter_rows(min_row=2, values_only=True):
        row_data = dict(zip(headers, row))
        # Skip rows where status is CREATION_FAILED
        if row_data.get('Status') != 'CREATION_FAILED' and row_data.get('Resource Name') != 'N/A':
            data.append(row_data)
    
    return data, wb, sheet

def update_log_excel(wb, sheet, row_index, proxy_uri, status):
    """Update Excel with both URL and status"""
    # Add columns if they don't exist
    if 'Proxy URI' not in [cell.value for cell in sheet[1]]:
        sheet.cell(row=1, column=sheet.max_column + 1, value='Proxy URI')
    if 'Updated Status' not in [cell.value for cell in sheet[1]]:
        sheet.cell(row=1, column=sheet.max_column + 1, value='Updated Status')
    
    proxy_uri_col = [cell.value for cell in sheet[1]].index('Proxy URI') + 1
    status_col = [cell.value for cell in sheet[1]].index('Updated Status') + 1
    
    # Add https:// to proxy_uri if it's not 'N/A'
    complete_uri = f"https://{proxy_uri}" if proxy_uri != 'N/A' else 'N/A'
    
    # Update both columns
    sheet.cell(row=row_index, column=proxy_uri_col, value=complete_uri)
    sheet.cell(row=row_index, column=status_col, value=status)
    
def main():
    auth_token = get_auth_token()
    print("Auth Token obtained successfully.")
    
    log_data, wb, sheet = read_log_excel()
    
    for index, row in enumerate(log_data, start=2):  # start=2 for Excel rows
        resource_name = row['Resource Name']
        print(f"Checking status for resource: {resource_name}")
        
        status_response = check_instance_status(auth_token, resource_name)
        current_status = status_response.get('status', 'UNKNOWN')
        proxy_uri = status_response.get('gcp', {}).get('proxyUri', 'N/A')
        
        print(f"Current status: {current_status}")
        print(f"Proxy URI: {'https://' + proxy_uri if proxy_uri != 'N/A' else 'N/A'}")
        
        update_log_excel(wb, sheet, index, proxy_uri, current_status)
        
        print(f"Updated log for resource: {resource_name}\n")
    
    wb.save("workbench_instances_log.xlsx")
```

Key changes:
1. Modified `read_log_excel` to:
   - Check for 'CREATION_FAILED' status
   - Skip those rows in processing
   - Only include rows with valid Resource Names

2. Updated `update_log_excel` to:
   - Handle both Proxy URI and Updated Status columns
   - Add 'https://' prefix properly
   - Update both columns in one operation

3. Modified main function to:
   - Use the filtered data from read_log_excel
   - Process only valid rows
   - Update both URL and status for each valid entry

This should now:
1. Skip any rows where status is 'CREATION_FAILED'
2. Only process rows with valid Resource Names
3. Update both URL and status columns
4. Maintain proper mapping throughout

Let me know if you need any adjustments!