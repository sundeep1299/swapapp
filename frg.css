import React, { useState } from 'react';
import { DatePicker, ButtonPrimary, Input, Select, SelectOption, Label } from '@americanexpress/dls-react';

const StatusForm = () => {
  const [formData, setFormData] = useState({
    projectName: '',
    priority: '',
    jiraLink: '',
    arbApprovalDate: '',
    projectBuildStartDate: '',
    projectBuildStartStep1: '',
    aclRaisedDate: '',
    firewallReqCompleteDate: '',
    projectBuildDate: '',
    projectValidationDate: '',
    projectHandoverDate: '',
    issues: '',
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prevState => ({ ...prevState, [name]: value }));
  };

  const handleDateChange = (name) => (dateString) => {
    setFormData(prevState => ({ ...prevState, [name]: dateString }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('Form submitted:', formData);
    alert('Form submitted successfully!');
  };

  const renderDatePicker = (label, name) => (
    <div style={styles.fieldContainer}>
      <Label htmlFor={name} style={styles.label}>{label}</Label>
      <DatePicker
        id={`${name}-default`}
        name={name}
        value={formData[name]}
        onChange={handleDateChange(name)}
        placeholder="MM/DD/YYYY"
      />
    </div>
  );

  const renderField = (label, name, type = "text") => {
    if (type === "date") {
      return renderDatePicker(label, name);
    }
    return (
      <div style={styles.fieldContainer}>
        <Label htmlFor={name} style={styles.label}>{label}</Label>
        {type === "select" ? (
          <Select name={name} value={formData[name]} onChange={handleChange} required style={styles.input}>
            <SelectOption value="">Select Priority</SelectOption>
            <SelectOption value="p0">P0</SelectOption>
            <SelectOption value="p1">P1</SelectOption>
            <SelectOption value="p2">P2</SelectOption>
            <SelectOption value="p3">P3</SelectOption>
          </Select>
        ) : (
          <Input
            type={type}
            id={name}
            name={name}
            value={formData[name]}
            onChange={handleChange}
            required
            style={styles.input}
          />
        )}
      </div>
    );
  };
