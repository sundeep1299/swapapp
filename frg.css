I see you're getting an SSL error and issues with the curl command format. Let me help fix both:

1. First, let's fix the curl command. The correct format should be:

```bash
curl -X POST http://127.0.0.1:5000/query \
-H "Content-Type: application/json" \
--data "{\"query\": \"What is Lumi\"}"
```

Or more simply:
```bash
curl -X POST -H "Content-Type: application/json" -d "{\"query\": \"What is Lumi\"}" http://127.0.0.1:5000/query
```

2. For the SSL error, let's modify the app.py to handle SSL properly:

```python
from quart import Quart, request, jsonify
from quart_cors import cors
from request_to_llm import main
import ssl

app = Quart(__name__)
app = cors(app)

@app.route('/query', methods=['POST'])
async def lumi_orchestrator():
    try:
        data = await request.get_json()
        if "query" not in data:
            return jsonify({"error": "query is required"}), 400
            
        query = data.get('query')
        print(f"Received query: {query}")
        
        result = await main(query)
        print(f"Result: {result}")
        return jsonify(result)
    except Exception as e:
        print(f"Error occurred: {str(e)}")
        return jsonify({"error": str(e)}), 500

if __name__ == "__main__":
    # Create SSL context
    context = ssl.SSLContext(ssl.PROTOCOL_TLS_SERVER)
    # Run without SSL for local testing
    app.run(host="127.0.0.1", port=5000, debug=True, ssl=None)
```

3. Test the API using Python requests instead of curl (create a test.py):

```python
import requests
import json

def test_api():
    url = "http://127.0.0.1:5000/query"
    headers = {
        "Content-Type": "application/json"
    }
    data = {
        "query": "What is Lumi"
    }
    
    try:
        response = requests.post(url, headers=headers, json=data, verify=False)
        print("Status Code:", response.status_code)
        print("Response:", json.dumps(response.json(), indent=2))
    except Exception as e:
        print("Error:", str(e))

if __name__ == "__main__":
    test_api()
```

To run:
1. Start the server:
```bash
python app.py
```

2. In another terminal, test using either:
```bash
python test.py
```

or using the curl command:
```bash
curl -X POST -H "Content-Type: application/json" -d "{\"query\": \"What is Lumi\"}" http://127.0.0.1:5000/query
```

The SSL error should be resolved now. Let me know if you need any clarification or run into other issues!