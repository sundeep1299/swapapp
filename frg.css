import React, { useState, useEffect, useCallback } from 'react';
import axios from 'axios';
import { Pie } from 'react-chartjs-2';
import SelectDropdownComponent from './components/SelectDropdown';
import MultiStepTrackerComponent from './components/MultiStepTracker';

function App() {
    const [projects, setProjects] = useState([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState(null);
    const [projectStatus, setProjectStatus] = useState({});
    const [chartData, setChartData] = useState({});

    const fetchProjects = useCallback(async () => {
        setLoading(true);
        setError(null);
        try {
            const response = await axios.get('http://127.0.0.1:5000/projects-list');
            setProjects(response.data.projects);
        } catch (error) {
            setError("Error fetching projects");
        } finally {
            setLoading(false);
        }
    }, []);

    const fetchProjectStatus = useCallback(async (projectName) => {
        setLoading(true);
        setError(null);
        try {
            const response = await axios.get(`http://127.0.0.1:5000/project-status?projectId=${projectName}`);
            console.log("Project status:", response.data);
            setProjectStatus(response.data);
        } catch (error) {
            setError("Error fetching project status");
        } finally {
            setLoading(false);
        }
    }, []);

    const fetchChartData = useCallback(async () => {
        setLoading(true);
        setError(null);
        try {
            const response = await axios.get('http://127.0.0.1:5000/chart-data');
            const data = response.data;
            setChartData({
                labels: data.labels,
                datasets: [
                    {
                        label: 'Project Data',
                        data: data.values,
                        backgroundColor: [
                            '#FF6384',
                            '#36A2EB',
                            '#FFCE56',
                            '#4BC0C0',
                            '#9966FF',
                            '#FF9F40'
                        ],
                    },
                ],
            });
        } catch (error) {
            setError("Error fetching chart data");
        } finally {
            setLoading(false);
        }
    }, []);

    useEffect(() => {
        fetchProjects();
        fetchChartData();
    }, [fetchProjects, fetchChartData]);

    return (
        <div className="App">
            <header>
                <img src="logo.png" alt="American Express" size="LARGE" styleType="line" />
                <h1>Lumi Insight</h1>
            </header>
            <main>
                <SelectDropdownComponent
                    projects={projects}
                    fetchProjects={fetchProjects}
                    fetchProjectStatus={fetchProjectStatus}
                    loading={loading}
                    error={error}
                />
                <MultiStepTrackerComponent projectStatus={projectStatus} />
                {chartData && (
                    <div className="chart-container">
                        <h2>Project Status Overview</h2>
                        <Pie data={chartData} />
                    </div>
                )}
                {loading && <p className="loading">Loading...</p>}
                {error && <p className="error">{error}</p>}
            </main>
        </div>
    );
}

export default App;
