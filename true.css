import React, { useState } from 'react';
import { FileText, Book, Server, Database, Cloud, Tool, Settings, GitBranch, Search, Menu, X, ChevronRight } from 'lucide-react';

const Sidebar = ({ isOpen, toggleSidebar }) => (
  <div className={`fixed top-0 left-0 h-full bg-slate-900 text-white transition-all duration-300 border-r border-slate-700 ${isOpen ? 'w-64' : 'w-0'} lg:w-64 z-50 overflow-hidden`}>
    <div className="p-4 border-b border-slate-700">
      <div className="flex items-center justify-between">
        <h2 className="text-xl font-bold bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent">LUMI Docs</h2>
        <button onClick={toggleSidebar} className="lg:hidden">
          <X className="h-6 w-6" />
        </button>
      </div>
    </div>
    <nav className="p-4">
      <div className="space-y-4">
        {[
          { icon: Book, text: 'Getting Started', href: '#getting-started' },
          { icon: Server, text: 'Platform Services', href: '#platform-services' },
          { icon: Tool, text: 'Developer Tools', href: '#developer-tools' },
          { icon: Settings, text: 'Administration', href: '#administration' },
          { icon: GitBranch, text: 'Contributing', href: '#contributing' }
        ].map((item, index) => (
          <a 
            key={index}
            href={item.href}
            className="flex items-center space-x-3 p-2 rounded-lg hover:bg-slate-800 transition-colors text-slate-300 hover:text-white group"
          >
            <item.icon className="h-5 w-5" />
            <span>{item.text}</span>
            <ChevronRight className="h-4 w-4 ml-auto opacity-0 group-hover:opacity-100 transition-opacity" />
          </a>
        ))}
      </div>
    </nav>
  </div>
);

const SearchBar = () => (
  <div className="relative max-w-xl mx-auto">
    <div className="relative">
      <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-slate-400" />
      <input
        type="text"
        placeholder="Search documentation..."
        className="w-full pl-10 pr-4 py-2 bg-slate-800 border border-slate-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-white placeholder-slate-400"
      />
    </div>
  </div>
);

const ServiceCard = ({ icon: Icon, title, description, link }) => (
  <a
    href={link}
    className="block p-6 bg-slate-800 rounded-lg border border-slate-700 hover:border-blue-500 transition-all duration-300 hover:shadow-lg hover:shadow-blue-500/10 group"
  >
    <div className="flex items-center space-x-4 mb-4">
      <div className="p-3 bg-blue-500/10 rounded-lg group-hover:bg-blue-500/20 transition-colors">
        <Icon className="h-6 w-6 text-blue-400" />
      </div>
      <h3 className="text-lg font-semibold text-white">{title}</h3>
    </div>
    <p className="text-slate-300 text-sm leading-relaxed">{description}</p>
  </a>
);

const LUMIPlatform = () => {
  const [sidebarOpen, setSidebarOpen] = useState(false);

  const services = [
    {
      icon: Database,
      title: "BigQuery",
      description: "Enterprise data warehouse that helps you manage and analyze your data with built-in features like machine learning, geospatial analysis, and business intelligence.",
      link: "/services/bigquery"
    },
    {
      icon: Cloud,
      title: "CloudSQL",
      description: "Fully managed relational database service for MySQL, PostgreSQL, and SQL Server with automated backups, replication, and security controls.",
      link: "/services/cloudsql"
    },
    {
      icon: FileText,
      title: "LUMI SDK",
      description: "Development kit for building and integrating applications with LUMI platform services seamlessly.",
      link: "/sdk"
    }
  ];

  return (
    <div className="min-h-screen bg-slate-900">
      <Sidebar isOpen={sidebarOpen} toggleSidebar={() => setSidebarOpen(false)} />
      
      <div className={`lg:ml-64 transition-all duration-300 ${sidebarOpen ? 'ml-64' : 'ml-0'}`}>
        <header className="bg-slate-800/50 backdrop-blur-sm border-b border-slate-700 sticky top-0 z-40">
          <div className="container mx-auto px-4 py-4">
            <div className="flex items-center justify-between">
              <button 
                onClick={() => setSidebarOpen(true)} 
                className="lg:hidden text-white"
              >
                <Menu className="h-6 w-6" />
              </button>
              <SearchBar />
              <div className="w-6 lg:hidden" /> {/* Spacer for layout balance */}
            </div>
          </div>
        </header>

        <main className="container mx-auto px-4 py-8">
          <div className="max-w-4xl mx-auto">
            <section className="mb-12">
              <div className="bg-gradient-to-r from-blue-500 to-cyan-500 p-[1px] rounded-lg mb-8">
                <div className="bg-slate-900 rounded-lg p-8">
                  <h1 className="text-4xl font-bold text-white mb-4">
                    LUMI Platform Documentation
                  </h1>
                  <p className="text-lg text-slate-300">
                    Your centralized guide to LUMI's next-generation big data platform. Explore our services, tools, and best practices.
                  </p>
                </div>
              </div>
            </section>

            <section className="mb-12">
              <h2 className="text-2xl font-semibold text-white mb-6">Popular Services</h2>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {services.map((service, index) => (
                  <ServiceCard key={index} {...service} />
                ))}
              </div>
            </section>

            <section className="space-y-8">
              <div className="bg-slate-800 rounded-lg p-6 border border-slate-700">
                <h2 className="text-xl font-semibold text-white mb-4">Quick Links</h2>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {[
                    { title: "Getting Started Guide", desc: "New to LUMI? Start here" },
                    { title: "API Reference", desc: "Complete API documentation" },
                    { title: "Best Practices", desc: "Recommended patterns and practices" },
                    { title: "Examples", desc: "Code samples and tutorials" }
                  ].map((item, index) => (
                    <a
                      key={index}
                      href="#"
                      className="p-4 rounded-lg bg-slate-700/50 hover:bg-slate-700 transition-colors"
                    >
                      <h3 className="font-medium text-white">{item.title}</h3>
                      <p className="text-sm text-slate-300">{item.desc}</p>
                    </a>
                  ))}
                </div>
              </div>
            </section>
          </div>
        </main>
      </div>
    </div>
  );
};

export default LUMIPlatform;