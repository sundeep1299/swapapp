import React, { useState } from 'react';
import { FileText, Book, Server, Database, Cloud, Tool, Settings, GitBranch, Search, Menu, X, ChevronRight } from 'lucide-react';

// Separate CSS file content
const styles = `
  :root {
    --primary-color: #4f46e5;
    --primary-hover: #4338ca;
    --secondary-color: #06b6d4;
    --background-dark: #0f172a;
    --background-light: #1e293b;
    --text-primary: #ffffff;
    --text-secondary: #94a3b8;
    --border-color: #334155;
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    background-color: var(--background-dark);
    color: var(--text-primary);
    line-height: 1.5;
  }

  .sidebar {
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    width: 250px;
    background-color: var(--background-light);
    border-right: 1px solid var(--border-color);
    padding: 1rem;
    transition: transform 0.3s ease;
  }

  .sidebar-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--border-color);
    margin-bottom: 1rem;
  }

  .sidebar-logo {
    font-size: 1.5rem;
    font-weight: bold;
    background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }

  .nav-link {
    display: flex;
    align-items: center;
    padding: 0.75rem 1rem;
    color: var(--text-secondary);
    text-decoration: none;
    border-radius: 6px;
    margin-bottom: 0.5rem;
    transition: background-color 0.2s;
  }

  .nav-link:hover {
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--text-primary);
  }

  .nav-link svg {
    margin-right: 0.75rem;
  }

  .main-content {
    margin-left: 250px;
    padding: 2rem;
  }

  .header {
    background-color: var(--background-light);
    padding: 1rem 2rem;
    margin-bottom: 2rem;
    border-radius: 8px;
  }

  .search-bar {
    position: relative;
    max-width: 600px;
    margin: 0 auto;
  }

  .search-input {
    width: 100%;
    padding: 0.75rem 1rem 0.75rem 2.5rem;
    background-color: var(--background-dark);
    border: 1px solid var(--border-color);
    border-radius: 6px;
    color: var(--text-primary);
  }

  .search-icon {
    position: absolute;
    left: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-secondary);
  }

  .services-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .service-card {
    background-color: var(--background-light);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 1.5rem;
    transition: transform 0.2s, box-shadow 0.2s;
  }

  .service-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
    border-color: var(--primary-color);
  }

  .service-header {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
  }

  .service-icon {
    background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
    padding: 0.75rem;
    border-radius: 8px;
    margin-right: 1rem;
  }

  .service-title {
    font-size: 1.25rem;
    font-weight: 600;
  }

  .service-description {
    color: var(--text-secondary);
    font-size: 0.9rem;
  }

  @media (max-width: 768px) {
    .sidebar {
      transform: translateX(-100%);
    }

    .sidebar.open {
      transform: translateX(0);
    }

    .main-content {
      margin-left: 0;
    }

    .services-grid {
      grid-template-columns: 1fr;
    }
  }

  .quick-links {
    background-color: var(--background-light);
    border-radius: 8px;
    padding: 1.5rem;
    margin-top: 2rem;
  }

  .quick-links-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
    margin-top: 1rem;
  }

  .quick-link-card {
    background-color: rgba(255, 255, 255, 0.05);
    padding: 1rem;
    border-radius: 6px;
    transition: background-color 0.2s;
  }

  .quick-link-card:hover {
    background-color: rgba(255, 255, 255, 0.1);
  }
`;

const Sidebar = ({ isOpen, toggleSidebar }) => (
  <div className={`sidebar ${isOpen ? 'open' : ''}`}>
    <div className="sidebar-header">
      <h2 className="sidebar-logo">LUMI Docs</h2>
      <button onClick={toggleSidebar} style={{ background: 'none', border: 'none', color: 'white', cursor: 'pointer' }}>
        <X />
      </button>
    </div>
    <nav>
      {[
        { icon: Book, text: 'Getting Started', href: '#getting-started' },
        { icon: Server, text: 'Platform Services', href: '#platform-services' },
        { icon: Tool, text: 'Developer Tools', href: '#developer-tools' },
        { icon: Settings, text: 'Administration', href: '#administration' }
      ].map((item, index) => (
        <a key={index} href={item.href} className="nav-link">
          <item.icon size={20} />
          <span>{item.text}</span>
        </a>
      ))}
    </nav>
  </div>
);

const ServiceCard = ({ icon: Icon, title, description }) => (
  <div className="service-card">
    <div className="service-header">
      <div className="service-icon">
        <Icon color="white" size={24} />
      </div>
      <h3 className="service-title">{title}</h3>
    </div>
    <p className="service-description">{description}</p>
  </div>
);

const LUMIPlatform = () => {
  const [sidebarOpen, setSidebarOpen] = useState(false);

  const services = [
    {
      icon: Database,
      title: "BigQuery",
      description: "Enterprise data warehouse with built-in ML capabilities."
    },
    {
      icon: Cloud,
      title: "CloudSQL",
      description: "Managed relational database service with automated backups."
    },
    {
      icon: FileText,
      title: "LUMI SDK",
      description: "Development kit for LUMI platform integration."
    }
  ];

  return (
    <>
      <style>{styles}</style>
      <Sidebar isOpen={sidebarOpen} toggleSidebar={() => setSidebarOpen(false)} />
      
      <div className="main-content">
        <div className="header">
          <div className="search-bar">
            <Search className="search-icon" size={20} />
            <input
              type="text"
              placeholder="Search documentation..."
              className="search-input"
            />
          </div>
        </div>

        <h1 style={{ fontSize: '2.5rem', marginBottom: '2rem' }}>
          LUMI Platform Documentation
        </h1>

        <section>
          <h2 style={{ fontSize: '1.8rem', marginBottom: '1.5rem' }}>Services</h2>
          <div className="services-grid">
            {services.map((service, index) => (
              <ServiceCard key={index} {...service} />
            ))}
          </div>
        </section>

        <section className="quick-links">
          <h2 style={{ fontSize: '1.5rem', marginBottom: '1rem' }}>Quick Links</h2>
          <div className="quick-links-grid">
            {[
              { title: "Getting Started Guide", desc: "New to LUMI? Start here" },
              { title: "API Reference", desc: "Complete API documentation" },
              { title: "Best Practices", desc: "Recommended patterns" },
              { title: "Examples", desc: "Code samples and tutorials" }
            ].map((item, index) => (
              <div key={index} className="quick-link-card">
                <h3 style={{ marginBottom: '0.5rem' }}>{item.title}</h3>
                <p style={{ color: 'var(--text-secondary)', fontSize: '0.9rem' }}>{item.desc}</p>
              </div>
            ))}
          </div>
        </section>
      </div>
    </>
  );
};

export default LUMIPlatform;