
import React, { useState } from 'react';
import { DatePicker, ButtonPrimary, Label, Select, SelectOption, Input } from '@americanexpress/dls-react';
import './UpdateForm.css';
import Search from './Search';

const UpdateForm = () => {
  const [formData, setFormData] = useState({
    projectName: '',
    priority: '',
    jiraRaisedDate: '',
    jiraLink: '',
    poc: '',
    projectTimelineHandover: '',
    arbApprovalDate: null,
    projectBuildStartDate: null,
    firewallAclReqRaisedDate: null,
    firewallAclReqCompleteDate: null,
    projectBuildCompleteDate: null,
    projectValidationDate: null,
    projectHandoverDate: null,
    projectFinalHandover: null,
    comments: ''
  });

  const [searchTerm, setSearchTerm] = useState('');

  const searchProject = async (searchTerm) => {
    try {
      // Replace this with your actual API call
      const response = await fetch(`/api/projects?name=${searchTerm}`);
      const projectData = await response.json();
      
      if (projectData) {
        setFormData(projectData);
      } else {
        console.log('Project not found');
        // You might want to show an error message to the user here
      }
    } catch (error) {
      console.error('Error searching for project:', error);
      // Handle the error appropriately
    }
  };

  const handleInputChange = (event) => {
    const { name, value } = event.target;
    setFormData(prevState => ({
      ...prevState,
      [name]: value
    }));
  };

  const handleDateChange = (name) => (date) => {
    setFormData(prevState => ({
      ...prevState,
      [name]: date
    }));
  };

  const handleSearchChange = (event) => {
    setSearchTerm(event.target.value);
  };

  const handleSearchSubmit = (event) => {
    event.preventDefault();
    searchProject(searchTerm);
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    console.log('Form submitted:', formData);
    // Handle form submission logic here
  };

  return (
    <form onSubmit={handleSubmit} className="update-form">
      <div className="search-section">
        <Search 
          value={searchTerm} 
          onChange={handleSearchChange} 
          onSubmit={handleSearchSubmit} 
        />
      </div>

      {/* Rest of the form fields */}
      <div className="update-form-row">
        <div className="update-form-column uce-column">
          <h3>UCE Team</h3>
          <div>
            <Label htmlFor="projectName">Project Name:</Label>
            <Input
              id="projectName"
              name="projectName"
              value={formData.projectName}
              onChange={handleInputChange}
              required
            />
          </div>
          {/* Add other form fields here */}
        </div>
      </div>

      <div className="submit-section">
        <ButtonPrimary type="submit">Submit</ButtonPrimary>
      </div>
    </form>
  );
};

export default UpdateForm;