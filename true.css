 To center the SearchComponent in the header of your App.js, we can add some inline styles to both the header and the SearchComponent. Here's how you can modify your App.js to achieve this:



1. First, let's modify your App.js:

```jsx
function App() {
  return (
    <AuthBlueSso>
      <div className="App">
        <header style={{
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'center',
          padding: '20px'
        }}>
          <img src={Logo} alt="Lumi OneConsole" className="logo" />
          <h1>OneConsole</h1>
          <UserInfo />
          <div style={{
            width: '100%',
            maxWidth: '600px',
            margin: '20px 0'
          }}>
            <SearchComponent />
          </div>
        </header>
        <main>
        </main>
        <footer>
          <img src={footerLogo} alt="Lumi OneConsole" className="logo" />
        </footer>
      </div>
    </AuthBlueSso>
  );
}
```

2. Now, let's modify your SearchComponent.js to add some inline styles:

```jsx
const SearchComponent = () => {
  // ... existing state and functions ...

  return (
    <div className="col-md-6" style={{
      width: '100%',
      maxWidth: '600px',
      margin: '0 auto'
    }}>
      <Search
        autoFocus=""
        buttonSearch
        clearButtonLabel="Clear text"
        id="dls-search"
        labelText="Questions and answers"
        onChange={handleChange}
        placeholder="Search..."
        searchButtonLabel="Search"
        value={searchValue}
        style={{
          width: '100%',
          boxSizing: 'border-box'
        }}
      />
      {searchResults.length > 0 && (
        <SearchResults style={{
          width: '100%',
          boxSizing: 'border-box',
          marginTop: '10px'
        }}>
          {searchResults.map((result) => (
            <SearchResult key={result.id} title={result.title}>
              {result.description}
            </SearchResult>
          ))}
        </SearchResults>
      )}
    </div>
  );
};
```

These changes will:

1. Center the content in the header, including the logo, title, UserInfo, and SearchComponent.
2. Limit the width of the SearchComponent to 600px maximum, centered within the header.
3. Ensure the Search input and results take up the full width of their container.

Remember that using inline styles in React requires camelCase property names (e.g., `maxWidth` instead of `max-width`) and values should be strings (except for numbers).

If you find these inline styles becoming too complex or you need to reuse them, consider moving them to a separate CSS file or using a CSS-in-JS solution like styled-components or Emotion.